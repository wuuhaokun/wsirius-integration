server:
  port: 8888
  servlet:
    context-path: /demo
spring:
  application:
    name: wsirius-cloud-rbac-security
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/spring-boot-demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    #url: jdbc:mysql://127.0.0.1:3306/spring-boot-demo?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
    username: root
    password: 1234567890
    #password: root
  session:
    #    store-type: redis
    store-type:none
#  resources:
#    add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  main:
      allow-bean-definition-overriding: true
  redis:
    #Redis桌面管理工具Mac版：http://www.pc6.com/mac/486661.html
    #MacOS下安装Redis https://blog.csdn.net/kxwinxp/article/details/81224518
    host: localhost
    port: 6379
    # 连接超时时间（记得添加单位，Duration）
    timeout: 10000ms
    # Redis默认情况下有16个分片，这里配置具体使用的分片
    # database: 0
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: -1ms
        # 连接池中的最大空闲连接 默认 8
        max-idle: 8
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
        #############################
        #安裝rabbitmq https://cloud.tencent.com/developer/article/1397877
#  rabbitmq:
#    host: localhost
#    #port: 5672
#    username: guest
#    password: guest
#    #    virtual-host: /leyou
#    template:
#      retry:
#        enabled: true
#        initial-interval: 10000ms
#        max-interval: 210000ms
#        multiplier: 2
#    publisher-confirms: true
#    #############################
jwt:
  config:
    key: xkcoding
    ttl: 600000
    remember: 604800000
logging:
  level:
    com.xkcoding.rbac.security: debug
custom:
  config:
    ignores:
      # 需要过滤的 post 请求
      post:
        - "/api/auth/login"
        - "/api/auth/logout"

      # 需要过滤的请求，不限方法
      pattern:
        - "/test/*"
        - "/api/register/*"
#mqtt sample https://github.com/1ssqq1lxr/iot_push https://github.com/hugh-countryside/mqttServer & https://gitee.com/recallcode/iot-mqtt-server
